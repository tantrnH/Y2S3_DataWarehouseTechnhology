15 marks in our final assesment (Question3)
----------------------------------------
CREATE STAR SCHEME
----------------------------------------
-- create table

-- insert data

-- final outcome: create star scheme

-- create customer dimension table
CREATE TABLE CUSTOMER_DIM
(
CUSTOMER_KEY NUMBER NOT NULL,
CUSTOMERID   NUMBER NOT NULL,
COMPANYNAME  VARCHAR(25) NOT NULL,
COUNTRY      VARCHAR(15) NOT NULL,
REGION       VARCHAR(15) NOT NULL,
CITY         VARCHAR(15) NOT NULL,
POSTALCODE   VARCHAR(10) NOT NULL, 
CONSTRAINT CUSTOMER_DIM_PK PRIMARY KEY(CUSTOMER_KEY),
CONSTRAINT CUSTOMER_DIM_FK FOREIGN KEY(CUSTOMERID) REFERENCES NEW_CUST(CUSTOMERID)
);

CREATE SEQUENCE CUSTOMER_DIM_SEQ
  START WITH 1234
  INCREMENT BY 1;

-- ETL  (EXTRACT, TRANSFORM, LOAD)
-- EXTRACT
SELECT
  CUSTOMERID,
  COMPANYNAME,
  COUNTRY,
  REGION,
  CITY,
  POSTALCODE
FROM NEW_CUST;

--TRANSFORM (MODEIFY, EDIT, DATA STANDARDAISE)
SELECT
  CUSTOMERID,
  UPPER(COMPANYNAME),
  UPPER(COUNTRY),
  UPPER(REGION),
  UPPER(CITY),
  UPPER(POSTALCODE)
FROM NEW_CUST;

--LOAD
INSERT INTO CUSTOMER_DIM
SELECT
  CUSTOMER_DIM_SEQ.NEXTVAL,
  CUSTOMERID,
  UPPER(COMPANYNAME),
  UPPER(COUNTRY),
  UPPER(REGION),
  UPPER(CITY),
  UPPER(POSTALCODE)
FROM NEW_CUST;

ERROR at line 7:
ORA-01400: cannot insert NULL into ("RDS2S3G4_118"."CUSTOMER_DIM"."REGION")
   
SELECT CUSTOMERID
FROM NEW_CUST 
WHERE REGION IS NULL;

-- CLEAN DATA (REGION)
UPDATE NEW_CUST
SET REGION = CITY
WHERE REGION IS NULL;

--CLEAN DATA (POSTALCODE)
UPDATE NEW_CUST
SET POSTALCODE = '53300'
WHERE POSTALCODE IS NULL;



--CREATE EMPLOYEE_DIM
CREATE TABLE EMPLOYEE_DIM
(
EMPLOYEE_KEY NUMBER NOT NULL,
EMPLOYEEID   NUMBER NOT NULL,
EMP_NAME     VARCHAR(30) NOT NULL,
HIREDATE     DATE NOT NULL,
COUNTRY      VARCHAR(15) NOT NULL,
CITY         VARCHAR(15) NOT NULL,
CONSTRAINT EMPLOYEE_DIM_PK PRIMARY KEY(EMPLOYEE_KEY),
CONSTRAINT EMPLOYEE_DIM_FK FOREIGN KEY(EMPLOYEEID) REFERENCES EMPLOYEES(EMPLOYEEID)
);

-- CREATE SEQUENCE
CREATE SEQUENCE EMP_DIM_SEQ
  START WITH 1234
  INCREMENT BY 1;

--ETL
INSERT INTO EMPLOYEE_DIM
SELECT
  EMP_DIM_SEQ.NEXTVAL,
  EMPLOYEEID,
  FIRSTNAME || ' ' || LASTNAME,
  HIREDATE,
  COUNTRY,
  CITY
FROM EMPLOYEES;



--CREATE PRODUCT_DIM
CREATE TABLE PRODUCT_DIM
(
PRODUCT_KEY     NUMBER NOT NULL,
PRODUCTID       NUMBER NOT NULL,
PRODUCT_NAME    VARCHAR(40) NOT NULL,
QUANTITYPERUNIT VARCHAR(20) NOT NULL,
DISCONTINUED    NUMBER(1) NOT NULL,
CATEGORYNAME    VARCHAR(15) NOT NULL,
COMPANYNAME VARCHAR(40) NOT NULL,
COUNTRY     VARCHAR(15) NOT NULL,
CITY        VARCHAR(15) NOT NULL,
CONSTRAINT PRODUCT_DIM_PK PRIMARY KEY(PRODUCT_KEY),
CONSTRAINT PRODUCT_DIM_FK FOREIGN KEY(PRODUCTID) REFERENCES PRODUCTS(PRODUCTID)
);

-- CREATE SEQUENCE
CREATE SEQUENCE PRODUCT_DIM_SEQ
  START WITH 1234
  INCREMENT BY 1;

-- ETL
INSERT INTO PRODUCT_DIM
SELECT
  PRODUCT_DIM_SEQ.NEXTVAL,
  P.PRODUCTID,
  UPPER(P.PRODUCTNAME),
  UPPER(P.QUANTITYPERUNIT),
  P.DISCONTINUED,
  UPPER(C.CATEGORYNAME),
  UPPER(S.COMPANYNAME),
  UPPER(S.COUNTRY),
  UPPER(S.CITY)
FROM PRODUCTS P
JOIN CATEGORIES C ON P.CATEGORYID = C.CATEGORYID
JOIN SUPPLIERS S ON P.SUPPLIERID = S.SUPPLIERID;




--CREATE SALES_FACT
CREATE TABLE SALES_FACT
(
DATE_KEY     NUMBER NOT NULL,
CUSTOMER_KEY NUMBER NOT NULL,
PRODUCT_KEY  NUMBER NOT NULL,
EMPLOYEE_KEY NUMBER NOT NULL,
ORDERID      NUMBER NOT NULL,
UNITPRICE    NUMBER(6,2) NOT NULL,
QUANTITY     NUMBER(3) NOT NULL,
DISCOUNT     NUMBER(3,2) NOT NULL,
LINE_TOTAL   NUMBER(8,2) NOT NULL,
CONSTRAINT SALES_FACT_PK PRIMARY KEY(DATE_KEY, CUSTOMER_KEY, PRODUCT_KEY, EMPLOYEE_KEY),
CONSTRAINT SALES_DATE_FK FOREIGN KEY(DATE_KEY) REFERENCES DATE_DIM(DATE_KEY),
CONSTRAINT SALES_CUSTOOMER_FK FOREIGN KEY(CUSTOMER_KEY) REFERENCES CUSTOMER_DIM(CUSTOMER_KEY),
CONSTRAINT SALES_PRODUCT_FK FOREIGN KEY(PRODUCT_KEY) REFERENCES PRODUCT_DIM(PRODUCT_KEY),
CONSTRAINT SALES_EMPLOYEE_FK FOREIGN KEY(EMPLOYEE_KEY) REFERENCES EMPLOYEE_DIM(EMPLOYEE_KEY),
CONSTRAINT SALES_ORDERS_FK FOREIGN KEY(ORDERID) REFERENCES ORDERS(ORDERID)
);

--ETL ==ERROR: 0 rows created.==
INSERT INTO SALES_FACT
SELECT
  C.DATE_KEY,
  D.CUSTOMER_KEY,
  E.PRODUCT_KEY,
  F.EMPLOYEE_KEY,
  A.ORDERID,
  B.UNITPRICE,
  B.QUANTITY,
  B.DISCOUNT,
  (B.UNITPRICE * B.QUANTITY) * (1 - B.DISCOUNT)
FROM NEW_ORDERS A 
JOIN NEW_DETAILS B ON A.ORDERID = B.ORDERID 
JOIN DATE_DIM C ON C.CAL_DATE = A.ORDERDATE 
JOIN CUSTOMER_DIM D ON A.CUSTOMERID = D.CUSTOMERID 
JOIN PRODUCT_DIM E ON B.PRODUCTID = E.PRODUCTID 
JOIN EMPLOYEE_DIM F ON A.EMPLOYEEID = F.EMPLOYEEID;

